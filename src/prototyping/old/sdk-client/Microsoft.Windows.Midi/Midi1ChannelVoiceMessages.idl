import "Ump32.idl";

namespace Microsoft.Windows.Midi.Messages.Types.ChannelVoice
{
    [default_interface]
    unsealed runtimeclass Midi1ChannelVoiceMessage
    {
        UInt8 Group;
        UInt8 Opcode;
        UInt8 Channel;
        
        [default_overload]
        static Microsoft.Windows.Midi.Messages.Packet.Ump32 ToUmp();
        static void ToUmp(out Microsoft.Windows.Midi.Messages.Packet.Ump32 ump);

    };

    runtimeclass Midi1NoteOffMessage : Midi1ChannelVoiceMessage
    {
        UInt8 NoteNumber;
        UInt8 Velocity;

        Midi1NoteOffMessage();

        [default_overload]
        static Midi1NoteOffMessage FromUmp(Microsoft.Windows.Midi.Messages.Packet.Ump32 ump);
        static Midi1NoteOffMessage FromWord(UInt32 word0);
        static Midi1NoteOffMessage FromMidi1Bytes(UInt8 group, UInt8 midi1Byte0, UInt8 midi1Byte1, UInt8 midi1Byte2);
    };

    runtimeclass Midi1NoteOnMessage : Midi1ChannelVoiceMessage
    {
        UInt8 NoteNumber;
        UInt8 Velocity;

        Midi1NoteOnMessage();

        [default_overload]
        static Midi1NoteOnMessage FromUmp(Microsoft.Windows.Midi.Messages.Packet.Ump32 ump);
        static Midi1NoteOnMessage FromWord(UInt32 word0);
        static Midi1NoteOnMessage FromMidi1Bytes(UInt8 group, UInt8 midi1Byte0, UInt8 midi1Byte1, UInt8 midi1Byte2);
    };

    runtimeclass Midi1PolyPressureMessage : Midi1ChannelVoiceMessage
    {
        UInt8 NoteNumber;
        UInt8 Data;

        Midi1PolyPressureMessage();

        [default_overload]
        static Midi1PolyPressureMessage FromUmp(Microsoft.Windows.Midi.Messages.Packet.Ump32 ump);
        static Midi1PolyPressureMessage FromWord(UInt32 word0);
        static Midi1PolyPressureMessage FromMidi1Bytes(UInt8 group, UInt8 midi1Byte0, UInt8 midi1Byte1, UInt8 midi1Byte2);
    };

    runtimeclass Midi1ControlChangeMessage : Midi1ChannelVoiceMessage
    {
        UInt8 Index;
        UInt8 Data;

        Midi1ControlChangeMessage();

        [default_overload]
        static Midi1ControlChangeMessage FromUmp(Microsoft.Windows.Midi.Messages.Packet.Ump32 ump);
        static Midi1ControlChangeMessage FromWord(UInt32 word0);
        static Midi1ControlChangeMessage FromMidi1Bytes(UInt8 group, UInt8 midi1Byte0, UInt8 midi1Byte1, UInt8 midi1Byte2);
    };

    runtimeclass Midi1ProgramChangeMessage : Midi1ChannelVoiceMessage
    {
        UInt8 Program;

        Midi1ProgramChangeMessage();

        [default_overload]
        static Midi1ProgramChangeMessage FromUmp(Microsoft.Windows.Midi.Messages.Packet.Ump32 ump);
        static Midi1ProgramChangeMessage FromWord(UInt32 word0);
        static Midi1ProgramChangeMessage FromMidi1Bytes(UInt8 group, UInt8 midi1Byte0, UInt8 midi1Byte1);
    };

    runtimeclass Midi1ChannelPressureMessage : Midi1ChannelVoiceMessage
    {
        UInt8 Data;

        Midi1ChannelPressureMessage();

        [default_overload]
        static Midi1ChannelPressureMessage FromUmp(Microsoft.Windows.Midi.Messages.Packet.Ump32 ump);
        static Midi1ChannelPressureMessage FromWord(UInt32 word0);
        static Midi1ChannelPressureMessage FromMidi1Bytes(UInt8 group, UInt8 midi1Byte0, UInt8 midi1Byte1);
    };

    runtimeclass Midi1PitchBendMessage : Midi1ChannelVoiceMessage
    {
        UInt8 NoteNumber;
        UInt8 DataMsb;
        UInt8 DataLsb;

        UInt16 CombinedData;

        Midi1PitchBendMessage();

        [default_overload]
        static Midi1PitchBendMessage FromUmp(Microsoft.Windows.Midi.Messages.Packet.Ump32 ump);
        static Midi1PitchBendMessage FromWord(UInt32 word0);
        static Midi1PitchBendMessage FromMidi1Bytes(UInt8 group, UInt8 midi1Byte0, UInt8 midi1Byte1, UInt8 midi1Byte2);
    };



}